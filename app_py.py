# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sZR7eD0QXC1Qg0NC6h35dESPXPNLfLj3
"""

!pip install streamlit pyngrok --quiet

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import numpy as np
# import tensorflow as tf
# from PIL import Image
# 
# # Load model
# model = tf.keras.models.load_model("pneumonia_detection_model.h5")
# IMG_SIZE = (224, 224)
# 
# st.title("ðŸ©º Pneumonia Detection from Chest X-ray")
# st.write("Upload a Chest X-ray image (JPG/PNG)")
# 
# uploaded_file = st.file_uploader("Choose a file", type=["jpg", "jpeg", "png"])
# 
# if uploaded_file is not None:
#     image = Image.open(uploaded_file).convert("RGB")
#     st.image(image, caption="Uploaded X-ray", use_column_width=True)
# 
#     img = image.resize(IMG_SIZE)
#     img_array = np.array(img) / 255.0
#     img_array = np.expand_dims(img_array, axis=0)
# 
#     pred = model.predict(img_array)[0][0]
#     label = "PNEUMONIA" if pred > 0.5 else "NORMAL"
#     confidence = pred if pred > 0.5 else 1 - pred
# 
#     st.subheader("Prediction:")
#     st.markdown(f"**{label}** with **{confidence*100:.2f}% confidence**")
#

import subprocess

# Run ngrok config command to add the authtoken
subprocess.run(['ngrok', 'config', 'add-authtoken', '2x3BkMgPfpstTPfuzzsLKrpt29R_2srNDwDgMA92qexM2rkvp'])

from pyngrok import ngrok
import os
import time

# Terminate any running ngrok tunnels
print("Terminating any existing ngrok tunnels...")
ngrok.kill()
time.sleep(2) # Give it a moment to terminate

# Create tunnel using 'addr' instead of 'port'
public_url = ngrok.connect(addr="8501")
print(f"Your app is live at: {public_url}")

# Run streamlit
# Use os.system to run in background and capture output if needed,
# or keep the '&' if you prefer it to run entirely in the background
os.system("streamlit run app.py &")

